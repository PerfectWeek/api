openapi: 3.0.0

servers:
  - url: https://api.kalastud.io
    description: Production Server

info:
  title: PerfectWeek API
  description: The PerfectWeek web API
  version: 0.1.0
  contact:
    email: perfectweek_2020@labeip.epitech.eu
  license:
    name: MIT
    url: 'https://github.com/PerfectWeek/web-api/blob/dev/LICENSE'

####################
# Tags
#
tags:
  - name: API
    description: Get information about PerfectWeek's API
  - name: Auth
    description: Authentication routes
  - name: User
    description: User management
  - name: Group
    description: Group management
  - name: Calendar
    description: Calendar management
  - name: Event
    description: Event management

####################
# Routes
#
paths:
  #
  # API
  #
  /:
    get:
      tags:
        - API
      summary: The PerfectWeek API endpoint
      operationId: apiInfo
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Perfect Week API

  #
  # Auth
  #
  /auth/validate-email/{uuid}:
    get:
      tags:
        - Auth
      summary: Validate an email
      description: Finalize User creation
      operationId: confirmUserEmail
      parameters:
        - in: path
          name: uuid
          description: Unique identifier generated for email validation
          required: true
          schema:
            type: string
      responses:
        '201':
          description: User successfuly validated
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User has been successfully created
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/login:
    post:
      tags:
        - Auth
      summary: Log a User in
      description: Generation an authentication token for the User
      operationId: userLogin
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Authentication successful
                  access_token:
                    type: string
                    example: eyJhbGciIsInR5cCpXVCJ9.eyJpZCI6MSwiaF0Ijox.vNcwZK1V5SWzMnBB-jmnkX2u3C
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '403':
          description: Authentication failed
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Bad User or password
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  #
  # User
  #
  /users:
    post:
      tags:
        - User
      summary: Create a new User
      description: The User will be created as "pending" until its email is verified
      operationId: createUser
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegistrationCredentials'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: A link has been sent to your email address, please click on it in order to confirm your email
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid fields in User
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Pseudo or email already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /users/{pseudo}:
    get:
      tags:
        - User
      summary: Get information about a specific User
      operationId: getUserInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pseudo
          required: true
          description: The User pseudo
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      tags:
        - User
      summary: Edit User information
      operationId: editUserInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pseudo
          required: true
          description: The User pseudo
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid fields in User
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - User
      summary: Permanently delete a User
      operationId: deleteUser
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pseudo
          required: true
          description: The User pseudo
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User deleted
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /users/{pseudo}/groups:
    get:
      tags:
        - User
      summary: Get all Groups a User belongs to
      operationId: getUserGroups
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pseudo
          required: true
          description: The User pseudo
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupRecap'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /users/{pseudo}/calendars:
    get:
      tags:
        - User
      summary: Get all Calendars a User owns
      operationId: getUserCalendars
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: pseudo
          required: true
          description: The User pseudo
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  calendars:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarRecap'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  #
  # Group
  #
  /groups:
    post:
      tags:
        - Group
      summary: Create a new Group
      operationId: createGroup
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupCredentials'
      responses:
        '201':
          description: Group created
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Group created
                  group:
                    $ref: '#/components/schemas/GroupInfo'
        '400':
          description: Invalid Group
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Invalid fields in Group
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /groups/{group-id}:
    get:
      tags:
        - Group
      summary: Get information about a Group
      operationId: getGroupInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  group:
                    $ref: '#/components/schemas/GroupInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Group not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Group not Found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      tags:
        - Group
      summary: Edit a Group information
      operationId: editGroupInfo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupEdit'
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      responses:
        '200':
          description: Group successfully edited
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  group:
                    $ref: '#/components/schemas/GroupInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - Group
      summary: Delete a Group
      operationId: deleteGroup
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      responses:
        '200':
          description: Group successfully deleted
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /groups/{group-id}/add-members:
    post:
      tags:
        - Group
      summary: Add new Users to a Group
      operationId: addMembersToGroup
      description: >
        Add new Users to a Group and returns the new list of members
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                members:
                  type: array
                  items:
                    $ref: '#/components/schemas/GroupMember'
      responses:
        '200':
          description: Users added
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupMember'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /groups/{group-id}/members:
    get:
      tags:
        - Group
      summary: Get all members of a Group
      operationId: getGroupMemberInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupMember'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /groups/{group-id}/members/{pseudo}:
    put:
      tags:
        - Group
      summary: Edit a member's role inside a Group
      operationId: editGroupMemberInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
        - in: path
          name: pseudo
          required: true
          description: The Member pseudo
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/GroupMemberRole'
      responses:
        '200':
          description: Role edited
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  member:
                    $ref: '#/components/schemas/GroupMember'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - Group
      summary: Remove a member from a Group
      operationId: deleteMemberFromGroup
      description: >
        Remove a member from a group and returns the updated members list
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
        - in: path
          name: pseudo
          required: true
          description: The member pseudo
          schema:
            type: string
      responses:
        '200':
          description: User successfully kicked
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupMember'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: User not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /groups/{group-id}/calendar:
    get:
      tags:
        - Group
      summary: Get information about a Group Calendar
      operationId: getGroupCalendar
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: group-id
          required: true
          description: The Group id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  calendar:
                    $ref: '#/components/schemas/CalendarInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Group not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Event not Found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


  #
  # Calendar
  #
  /calendars:
    post:
      tags:
        - Calendar
      summary: Create a new Calendar
      operationId: createCalendar
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalendarCredentials'
      responses:
        '201':
          description: Calendar created
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Calendar created
                  calendar:
                    $ref: '#/components/schemas/CalendarInfo'
        '400':
          description: Invalid Calendar
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Invalid fields in Calendar
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /calendars/{calendar-id}:
    get:
      tags:
        - Calendar
      summary: Get information about a Calendar
      operationId: getCalendarInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: calendar-id
          required: true
          description: The Calendar id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  calendar:
                    $ref: '#/components/schemas/CalendarInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Calendar not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Event not Found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      tags:
        - Calendar
      summary: Edit a Calendar information
      operationId: editCalendarInfo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalendarEdit'
      parameters:
        - in: path
          name: calendar-id
          required: true
          description: The Calendar id
          schema:
            type: string
      responses:
        '200':
          description: Calendar successfully edited
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  calendar:
                    $ref: '#/components/schemas/CalendarInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - Calendar
      summary: Delete a Calendar
      operationId: deleteCalendar
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: calendar-id
          required: true
          description: The Calendar id
          schema:
            type: string
      responses:
        '200':
          description: Calendar successfully deleted
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /calendars/{calendar-id}/events:
    post:
      tags:
        - Calendar
      summary: Create an Event
      operationId: createEvent
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: calendar-id
          required: true
          description: The Calendar in which the Event will be added
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  events:
                      $ref: '#/components/schemas/CalendarEvent'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    get:
      tags:
        - Calendar
      summary: Get all events of a Calendar
      operationId: getCalendarEvents
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: calendar-id
          required: true
          description: The Calendar id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarEvent'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  #
  # Event
  #
  /events/{event-id}:
    get:
      tags:
        - Event
      summary: Get information about an Event
      operationId: getEventInfo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  event:
                    $ref: '#/components/schemas/EventInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Event not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Event not Found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      tags:
        - Event
      summary: Edit an Event information
      operationId: editEventInfo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventEdit'
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
      responses:
        '200':
          description: Event successfully edited
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  event:
                    $ref: '#/components/schemas/EventInfo'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - Event
      summary: Delete an Event
      operationId: deleteEvent
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
      responses:
        '200':
          description: Event successfully deleted
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /events/{event-id}/attendees:
    get:
      tags:
        - Event
      summary: Get all attendees to an Event
      operationId: getEventsAttendees
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  attendees:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventAttendees'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /events/{event-id}/attendees/{attendee-pseudo}:
    delete:
      tags:
        - Event
      summary: Delete an Attendee to an Event
      operationId: deleteEventAttendee
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
        - in: path
          name: attendee-pseudo
          required: true
          description: The Attendee Pseudo
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  attendees:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventAttendees'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /events/{event-id}/invite-user:
    post:
      tags:
        - Event
      summary: Invite user to Event
      operationId: inviteUser
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: event-id
          required: true
          description: The Event id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
                  attendees:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventAttendees'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
        '403':
          description: Action not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


####################
# Component
#
components:
  #
  # Security
  #
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  #
  # Schemas
  #
  schemas:

    #
    # Models
    #
    RegistrationCredentials:
      type: object
      properties:
        pseudo:
          type: string
          format: '[a-zA-Z][a-zA-Z0-9]*'
          example: amazing_user
        email:
          type: string
          example: amazing.user@gmail.com
        password:
          type: string
          example: AmazingPassword42

    LoginCredentials:
      type: object
      properties:
        email:
          type: string
          example: amazing.user@gmail.com
        password:
          type: string
          example: AmazingPassword42

    UserInfo:
      type: object
      properties:
        pseudo:
          type: string
          example: amazing_user
        email:
          type: string
          example: amazing.user@gmail.com

    GroupRecap:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: amazing_group

    GroupEdit:
      type: object
      properties:
        name:
          type: string
          example: A new Group Name

    GroupCredentials:
      type: object
      properties:
        name:
          type: string
          example: amazing_group
        members:
          type: array
          items:
            type: string
            example: some_user_pseudo

    GroupInfo:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: amazing_group
        nb_members:
          type: integer
          example: 3

    GroupMemberRole:
      type: string
      enum:
        - Admin
        - Spectator

    GroupMember:
      type: object
      properties:
        pseudo:
          type: string
          example: amazing_user
        role:
          $ref: '#/components/schemas/GroupMemberRole'

    CalendarRecap:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: amazing_calendar

    CalendarCredentials:
      type: object
      properties:
        name:
          type: string
          example: amazing_calendar

    CalendarInfo:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: amazing_calendar

    CalendarEdit:
      type: object
      properties:
        name:
          type: string
          example: qlf tu coco

    CalendarEvent:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: qlf tu coco
        start_time:
          type: string
          example: 12-12-2012T12:12:12
        end_time:
          type: string
          example: 13-12-2012T12:12:12

    EventInfo:
      type: object
      properties:
        id:
          type: number
          example: 43
        name:
          type: string
          example: nouvel an
        description:
          type: string
          example: soiree
        location:
          type: string
          example: Le pub Universitaire, Quebec City
        calendar_id:
          type: number
          example : 3
        start_time:
          type: string
          example: 12-12-2012T12:12:12
        end_time:
          type: string
          example: 13-12-2012T12:12:12

    EventEdit:
      type: object
      properties:
        name:
          type: string
          example: nouvel an
        description:
          type: string
          example: soiree
        start_time:
          type: string
          example: 12-12-2012T12:12:12
        end_time:
          type: string
          example: 13-12-2012T12:12:12

    EventAttendees:
      type: object
      properties:
        pseudo:
          type: string
          example: alif

    InviteUser:
      type: object
      properties:
        pseudo:
          type: string
          example: alif

    DeleteAttendee:
      type: object
      properties:
        pseudo:
          type: string
          example: alif



    #
    # Responses
    #

    # 401
    AuthenticationFailed:
      description: The authentication failed
      type: object
      properties:
        message:
          type: string
          example: You must be authenticated to perform this action
    # 403
    Unauthorized:
      description: The action is not allowed
      type: object
      properties:
        message:
          type: string
          example: Action not allowed
    # 404
    NotFound:
      description: Route or Resource not found
      type: object
      properties:
        message:
          type: string
          example: Route or Resource not found
    # 500
    InternalServerError:
      description: Internal Server Error
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error