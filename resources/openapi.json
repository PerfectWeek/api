{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.kalastud.io",
      "description": "Production Server"
    }
  ],
  "info": {
    "title": "PerfectWeek API",
    "description": "The PerfectWeek web API",
    "version": "0.1.0",
    "contact": {
      "email": "perfectweek_2020@labeip.epitech.eu"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/PerfectWeek/web-api/blob/dev/LICENSE"
    }
  },
  "tags": [
    {
      "name": "API",
      "description": "Get information about PerfectWeek's API"
    },
    {
      "name": "Auth",
      "description": "Authentication routes"
    },
    {
      "name": "User",
      "description": "User management"
    },
    {
      "name": "Group",
      "description": "Group management"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "The PerfectWeek API endpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Perfect Week API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/validate-email/{uuid}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Validate an email",
        "description": "Finalize User creation",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "Unique identifier generated for email validation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfuly validated",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User has been successfully created"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log a User in",
        "description": "Generation an authentication token for the User",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication successful"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "eyJhbGciIsInR5cCpXVCJ9.eyJpZCI6MSwiaF0Ijox.vNcwZK1V5SWzMnBB-jmnkX2u3C"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad User or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "description": "The User will be created as \"pending\" until its email is verified",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationCredentials"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "A link has been sent to your email address, please click on it in order to confirm you email"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid fields in User"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Pseudo or email already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{pseudo}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get information about a specific User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pseudo",
            "required": true,
            "description": "The User pseudo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit User information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pseudo",
            "required": true,
            "description": "The User pseudo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid fields in User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Permanently delete a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pseudo",
            "required": true,
            "description": "The User pseudo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{pseudo}/groups": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all Groups a User belongs to",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pseudo",
            "required": true,
            "description": "The User pseudo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupRecap"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Create a new Group",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCredentials"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Group created"
                    },
                    "group": {
                      "$ref": "#/components/schemas/GroupInfo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Group",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid fields in Group"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get information about a Group",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "group": {
                      "$ref": "#/components/schemas/GroupInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Edit a Group information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupEdit"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group successfully edited",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "group": {
                      "$ref": "#/components/schemas/GroupInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Delete a Group",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/add-members": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Add new User to a Group",
        "description": "Add new User to a Group and returns the new list of members\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users added",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupMember"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not Found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/members": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get all members of a Group",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupMember"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/members/{pseudo}": {
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Edit a member's role inside a Group",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "pseudo",
            "required": true,
            "description": "The Member pseudo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "$ref": "#/components/schemas/GroupMemberRole"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role edited",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "member": {
                      "$ref": "#/components/schemas/GroupMember"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not Found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group-id}/kick-members": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Remove Users from a Group",
        "description": "Remove members from a roup and returns the updated member list\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "required": true,
            "description": "The Group id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "user_to_kick"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users successfully kicked",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupMember"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationFailed"
                }
              }
            }
          },
          "403": {
            "description": "Action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not Found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationCredentials": {
        "type": "object",
        "properties": {
          "pseudo": {
            "type": "string",
            "format": "[a-zA-Z][a-zA-Z0-9]*",
            "example": "amazing_user"
          },
          "email": {
            "type": "string",
            "example": "amazing.user@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "AmazingPassword42"
          }
        }
      },
      "LoginCredentials": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "amazing.user@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "AmazingPassword42"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "pseudo": {
            "type": "string",
            "example": "amazing_user"
          },
          "email": {
            "type": "string",
            "example": "amazing.user@gmail.com"
          }
        }
      },
      "GroupRecap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "name": {
            "type": "string",
            "example": "amazing_group"
          }
        }
      },
      "GroupEdit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "A new Group Name"
          },
          "owner": {
            "type": "string",
            "example": "new_owner_pseudo"
          }
        }
      },
      "GroupCredentials": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "amazing_group"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "some_user_pseudo"
            }
          }
        }
      },
      "GroupInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "name": {
            "type": "string",
            "example": "amazing_group"
          },
          "owner": {
            "type": "string",
            "example": "some_user_pseudo"
          }
        }
      },
      "GroupMemberRole": {
        "type": "string",
        "enum": [
          "Admin",
          "Spectator"
        ]
      },
      "GroupMember": {
        "type": "object",
        "properties": {
          "pseudo": {
            "type": "string",
            "example": "amazing_user"
          },
          "role": {
            "$ref": "#/components/schemas/GroupMemberRole"
          }
        }
      },
      "AuthenticationFailed": {
        "description": "The authentication failed",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You must be authenticated to perform this action"
          }
        }
      },
      "Unauthorized": {
        "description": "The action is not allowed",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Action not allowed"
          }
        }
      },
      "NotFound": {
        "description": "Route or Resource not found",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Route or Resource not found"
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      }
    }
  }
}